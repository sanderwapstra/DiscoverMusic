import to from 'await-to-js';
import queryString from 'query-string';
import React, { useEffect, useRef } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import SpotifyWebApi from 'spotify-web-api-js';
import { setToken, setUser } from './store/appSlice';
import { RootState } from './store/reducers';

function App() {
    const spotifyApi = useRef(new SpotifyWebApi());
    const dispatch = useDispatch();
    const { token, user } = useSelector((state: RootState) => state.app);

    const loginWithSpotify = () => {
        const scopes = 'playlist-modify-public';
        const redirectUrl =
            process.env.NODE_ENV === 'development'
                ? 'https://localhost:3000/'
                : 'https://discovermusic.netlify.app/';

        window.location.replace(
            `https://accounts.spotify.com/authorize?client_id=453ef47ef0c24a63a38a91b855d9c9b3&redirect_uri=${encodeURIComponent(
                redirectUrl
            )}&scope=${encodeURIComponent(scopes)}&response_type=token`
        );
    };

    const createPlaylist = async () => {
        let err, playlist;

        if (!user) return;

        [err, playlist] = await to(
            spotifyApi.current.createPlaylist(user.id, {
                name: "Floating Points in the 70's",
                description:
                    "Floating Points in the 70's generated by discovermusic.now.",
            })
        );

        if (err) {
            console.error(`Something went wrong: ${err}`);
        }

        if (playlist) {
            console.log('playlist :>> ', playlist);
        }
    };

    useEffect(() => {
        if (!token && window.location.hash) {
            const parsedHash = queryString.parse(window.location.hash);

            dispatch(setToken(parsedHash.access_token));

            if (parsedHash && parsedHash.access_token) {
                spotifyApi.current.setAccessToken(
                    parsedHash.access_token as string
                );
            }
        }
    }, [dispatch, token]);

    useEffect(() => {
        (async () => {
            if (token) {
                let err, user;

                spotifyApi.current.setAccessToken(token);

                [err, user] = await to(spotifyApi.current.getMe());

                if (err) {
                    console.error(`Something went wrong: ${err}`);
                }

                if (user) {
                    dispatch(setUser(user));
                }
            }
        })();
    }, [dispatch, token]);

    return (
        <div className="App">
            {user ? (
                <>
                    <h1>Hi, {user.display_name}</h1>
                    <button onClick={createPlaylist}>Create playlist</button>
                </>
            ) : (
                <button onClick={loginWithSpotify}>Login with Spotify</button>
            )}
        </div>
    );
}

export default App;
